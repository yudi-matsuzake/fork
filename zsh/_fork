#compdef fork

# shameless copy of zsh/functions/Completion/Unix/_sudo
# TODO: arguments

setopt localoptions extended_glob

local environ e cmd
local -a args
local -a _comp_priv_prefix

zstyle -a ":completion:${curcontext}:" environ environ

for e in "${environ[@]}"
do local -x "$e"
done

args=(
  '(-h --help)'{-h,--help}'[show help message]'
)

# Does -e appears before the first word that doesn't begin with a hyphen?
# The way (i) works in subscripts, the test will always be true if all the
# words begin with a hyphen.
# 
# TODO: use _arguments' $opt_args to detect the cases '-u jrandom -e' and '-Ae'
if [[ $service = sudoedit ]] || (( $words[(i)-e] < $words[(i)^(*sudo|-[^-]*)] ))  ; then
  args=( -A "-*" $args '!(-V --version -h --help)-e' '*:file:_files' )
else
  cmd="$words[1]"
  args+=(
    '(-o --stdout)'{-o,--stdout}'[Redirects the stdout to <file>.]' \
    '(-i --stdin)'{-o,--stdin}'[Redirects the stdin to <file>.]' \
    '(-e --stderr)'{-o,--stderr}'[Redirects the stderr to <file>.]' \
    '(-)1:command: _command_names -e'
    '*::arguments:{ _comp_priv_prefix=( $cmd -n ${(kv)opt_args[(I)(-[ugHEP]|--(user|group|set-home|preserve-env|preserve-groups))]} ) ; _normal }'
  )
fi

_arguments -s -S $args
